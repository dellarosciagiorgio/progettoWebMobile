services:
  server:
    image: mattiadispigno/sagradafamilia-server:latest
#    build:
#     context: .
#      target: final
    platform: ${MY_PLATFORM:-linux/amd64}
    environment:
      ASPNETCORE_URLS: "https://+:443;http://+:80"
      ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/https-devcert.pfx"
      ASPNETCORE_Kestrel__Certificates__Default__Password: ${CERT_PASSWORD}
      ASPNETCORE_ENVIRONMENT: Development
      AllowedIpsConfig__AllowedIps: '["https://localhost:443","http://localhost:5173"]'
      ConnectionStrings__MyDbContext: ${DB_CONN_STRING}
      Jwt__Key: ${MY_SECRET}
      Jwt__Issuer: https://localhost:443
      Jwt__Audience: https://localhost:443
    volumes:
      - ./server_certificate/https-devcert.pfx:/https/https-devcert.pfx

      #per inserire le pagine statiche direttamente in .net, inserire la cartella build nella cartella wwwroot
      #- ./wwwroot/build:/app/wwwroot:ro
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - sqlserver
    networks:
       - app_network

  sqlserver:
    image: mcr.microsoft.com/azure-sql-edge
    #se usate l'immagine di sqlserver, commentate la riga sopra   
    #e decommentate la riga sotto
    #image: mcr.microsoft.com/mssql/server:2022-latest
    platform: linux/amd64
    container_name: ${SQL_CONT_NAME:-sqlserver}
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SA_PASSWORD}
      - MSSQL_PID=Developer
    ports:
      - 1433:1433
    volumes:
      - db_vol:/var/opt/mssql
    restart: always
    networks:
       - app_network

    healthcheck:
      #usando sqlserver, decommentate:
      # test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U SA -P ${SA_PASSWORD} -C
      #e commentate la riga sotto
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P ${SA_PASSWORD}
      interval: 10s
      retries: 3
      start_period: 10s
      timeout: 5s
      
  sqlserver.configurator:
    image: mcr.microsoft.com/azure-sql-edge
    #se usate l'immagine di sqlserver, commentate la riga sopra   
    #e decommentate la riga sotto
    # image: mcr.microsoft.com/mssql/server:2022-latest
    platform: linux/amd64
    container_name: sqlserver.configurator
    
    #Creare una cartella init nella root del progetto e mettere dentro init.sql
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    #usando sqlserver, decommentate:
    # command: >
      # bash -c '
      # /opt/mssql-tools18/bin/sqlcmd -S ${SQL_CONT_NAME:-sqlserver} -U sa -P ${SA_PASSWORD} -d master -i docker-entrypoint-initdb.d/init.sql -C;
      # echo "All done!";
      # '
    #e commentate la riga sotto
    command: >
     bash -c '
     /opt/mssql-tools/bin/sqlcmd -S ${SQL_CONT_NAME:-sqlserver} -U sa -P ${SA_PASSWORD} -d master -i docker-entrypoint-initdb.d/init.sql;
     echo "All done!";
     '
    networks:
      - app_network
volumes:
  db_vol:

networks:
  app_network:
